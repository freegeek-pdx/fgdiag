#!/bin/bash

lshw -class display > /tmp/lshw.out

description=$( grep description /tmp/lshw.out | cut -f2- -d ':' )
product=$( grep product /tmp/lshw.out | cut -f2- -d ':' )
memory=$( grep size /tmp/lshw.out | cut -f2- -d ':' )
vendor=$( grep vendor /tmp/lshw.out | cut -f2- -d ':' )

DEBIAN_FRONTEND=noninteractive dpkg-reconfigure xserver-xorg
second_opinion=$( ddcprobe | grep memory | cut -f2- -d ' ' | sed "s/kb//" )
converted=$( expr $second_opinion / 1024 )

lspci_thinks=$( lspci -v -s $(lspci | grep VGA | cut -d ' ' -f 1) | grep " prefetchable) \[size=" | sed -r 's/.*\[size=(.+)M\]/\1/' )

clear

echo $product | grep -i tnt
if [[ "$?" == "0" ]]; then
	dd_fail=1
fi

echo $product | grep -i 86c32
if [[ "$?" == "0" ]]; then
	dd_fail=1
fi

echo "`date`" >> /var/log/video_testing

if [[ "$dd_fail" == "1" ]]; then
	dialog --infobox "\n Card Description: $description \n \n \n Product: $product \n \n \n Vendor: $vendor \n \n \n Memory (lshw): $memory \n \n \nPlease record the card type and the amount of memory on the gizmo label.\n\n\nPress <enter> to power the system down" 0 0
	echo "Description: $description  Product: $product  Vendor: $vendor  Memory: $memory" >> /var/log/video_testing
else
    dialog --infobox "\n Card Description: $description \n \n \n Product: $product \n \n \n Vendor: $vendor \n \n \n Memory (ddcprobe): ${converted}MB \n \n \nPlease record the card type and the amount of memory on the gizmo label. \n\nNote: Most cards will be correctly diagnosed here, but you should check the exception list" 0 0
    echo "Description: $description Product: $product  Vendor: $vendor  Memory: $converted " >> /var/log/video_testing
fi

while [[ 1 ]]; do
    read
done
