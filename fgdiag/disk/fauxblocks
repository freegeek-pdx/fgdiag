#!/usr/bin/env python
# -*- Python -*-

"""Badblocks shim.
"""

__version__ = '$Revision$'[11:-2]

import sys, time

patterns = ['a' * 8,
            '5' * 8,
            'f' * 8,
            '0' * 8]

class Fauxblocks:
    delay = .05
    total = 20
    step = 4
    action = None

    def __init__(self):
        self.output = sys.stdout
        self.stderr = sys.stderr
        self.count = None
        self.patterns = iter(patterns)

    def start(self):
        self.count = 0
        if self.action == 'Writing':
            self.action = 'Reading'
        else:
            self.action = 'Writing'
            self.pattern = self.patterns.next()
        self.stderr.write("%s pattern 0x%s\n" % (self.action,
                                                 self.pattern))

    def done(self):
        self.stderr.write("done\n")

    def progress(self):
        self.stderr.write("%d / %d\n" % (self.count, self.total))

    def tick(self):
        if self.count is None:
            self.start()
        elif self.count > self.total:
            self.done()
            self.start()
        else:
            self.progress()
            self.count = self.count + self.step
            time.sleep(self.delay)


def run():
    fb = Fauxblocks()
    while True:
        try:
            fb.tick()
        except StopIteration:
            break

if __name__ == '__main__':
    run()
